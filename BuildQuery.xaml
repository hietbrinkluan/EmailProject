<Activity mc:Ignorable="sap sap2010" x:Class="BuildQuery" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FullMatch" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_Subject" Type="InArgument(x:String)" />
    <x:Property Name="in_IncludedSenders" Type="InArgument(x:String)" />
    <x:Property Name="in_ExcludedSenders" Type="InArgument(x:String)" />
    <x:Property Name="io_queryFullStatement" Type="InOutArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>1244,4364.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>UiPath.MicrosoftOffice365.Models</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="64">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Build Query" sap:VirtualizedContainerService.HintSize="862.4,4300" sap2010:WorkflowViewState.IdRef="Sequence_10">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="querySubject" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="800,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Trace" Message="[&quot;Start building query&quot;]" />
    <If Condition="[in_FullMatch]" sap:VirtualizedContainerService.HintSize="800,378.4" sap2010:WorkflowViewState.IdRef="If_7">
      <If.Then>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_15">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[querySubject]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["subject eq '" + in_Subject.Trim + "'"]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_16">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[querySubject]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["contains(subject, '" + in_Subject.Trim + "')"]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <If Condition="[in_Subject Like &quot;[*]&quot;]" sap:VirtualizedContainerService.HintSize="800,378.4" sap2010:WorkflowViewState.IdRef="If_8">
      <If.Then>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_17">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_18">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[querySubject]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <If Condition="[Not String.IsNullOrEmpty(in_IncludedSenders)]" DisplayName="If IncludedSender Argument is present" sap:VirtualizedContainerService.HintSize="800,1577.6" sap2010:WorkflowViewState.IdRef="If_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Build IncludedSender query" sap:VirtualizedContainerService.HintSize="766.4,1387.2" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <Sequence.Variables>
            <Variable x:TypeArguments="s:String[]" Name="arrIncludedSenders" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Convert IncludedSender string into list" sap:VirtualizedContainerService.HintSize="704,113.6" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[arrIncludedSenders]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[in_IncludedSenders.Split(","c)]</InArgument>
            </Assign.Value>
          </Assign>
          <Switch x:TypeArguments="x:Int32" DisplayName="Switch Included Sender Count" Expression="[arrIncludedSenders.Length]" sap:VirtualizedContainerService.HintSize="704,1187.2" sap2010:WorkflowViewState.IdRef="Switch`1_1">
            <Switch.Default>
              <Sequence DisplayName="Multiple Included Senders" sap:VirtualizedContainerService.HintSize="667.2,962.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="arrIncludedSenderIndex" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[String.IsNullOrEmpty(io_queryFullStatement)]" sap:VirtualizedContainerService.HintSize="604.8,378.4" sap2010:WorkflowViewState.IdRef="If_13">
                  <If.Then>
                    <Assign DisplayName="Assign Multiple IncludedSender to Query" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_30">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["(from/emailAddress/address eq "]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Assign Multiple IncludedSender to Query" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[io_queryFullStatement + " AND (from/emailAddress/address eq "]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[arrIncludedSenderIndex]" DisplayName="For Each IncludedSender" sap:VirtualizedContainerService.HintSize="604.8,437.6" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[arrIncludedSenders]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="inSender" />
                      </ActivityAction.Argument>
                      <If Condition="[arrIncludedSenderIndex = 0]" DisplayName="If this is the first of multiple included senders" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_3">
                        <If.Then>
                          <Assign DisplayName="Assign first Multiple IncludedSender to Query" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[io_queryFullStatement + "'"+ inSender.Trim + "'"]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Assign DisplayName="Assign second and beyond Multiple IncludedSender to Query" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[io_queryFullStatement + " OR from/emailAddress/address eq '" + inSender.Trim + "'"]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
                <Assign DisplayName="Assign Multiple ExcludedSender to Query" sap:VirtualizedContainerService.HintSize="605,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[io_queryFullStatement + ")"]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </Switch.Default>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If x:Key="1" Condition="[arrIncludedSenders(0).Trim.Contains(&quot;@&quot;c)]" DisplayName="If '@' symbol is found, Assign single IncludedSender to Query" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="If_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <If Condition="[String.IsNullOrEmpty(io_queryFullStatement)]" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_14">
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["from/emailAddress/address eq '" + arrIncludedSenders(0).Trim + "'"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[io_queryFullStatement + " AND from/emailAddress/address eq '" + arrIncludedSenders(0).Trim + "'"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </If.Then>
              <If.Else>
                <If Condition="[String.IsNullOrEmpty(io_queryFullStatement)]" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_15">
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">["contains(from/emailAddress/address, '@" +  arrIncludedSenders(0).Trim + "')"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[io_queryFullStatement + " AND contains(from/emailAddress/address, '@" +  arrIncludedSenders(0).Trim + "')"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </If.Else>
            </If>
            <ui:LogMessage x:Key="0" DisplayName="LogMessage (No included Senders)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[&quot;No included senders in query&quot;]" />
          </Switch>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap2010:WorkflowViewState.IdRef="Sequence_20" />
      </If.Else>
    </If>
    <If Condition="[Not String.IsNullOrEmpty(in_ExcludedSenders)]" DisplayName="If ExcludedSender Argument is present" sap:VirtualizedContainerService.HintSize="800,1561.6" sap2010:WorkflowViewState.IdRef="If_21">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Build ExcludedSender query" sap:VirtualizedContainerService.HintSize="664,1371.2" sap2010:WorkflowViewState.IdRef="Sequence_19">
          <Sequence.Variables>
            <Variable x:TypeArguments="s:String[]" Name="arrExcludedSenders" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Convert ExcludedSender string into list" sap:VirtualizedContainerService.HintSize="601.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_35">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[arrExcludedSenders]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[in_ExcludedSenders.Split(","c)]</InArgument>
            </Assign.Value>
          </Assign>
          <Switch x:TypeArguments="x:Int32" DisplayName="Switch Included Sender Count" Expression="[arrExcludedSenders.Length]" sap:VirtualizedContainerService.HintSize="601.6,1171.2" sap2010:WorkflowViewState.IdRef="Switch`1_3">
            <Switch.Default>
              <Sequence DisplayName="Multiple Excluded Senders" sap:VirtualizedContainerService.HintSize="564.8,946.4" sap2010:WorkflowViewState.IdRef="Sequence_18">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="arrExcludedSenderIndex" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[String.IsNullOrEmpty(io_queryFullStatement)]" sap:VirtualizedContainerService.HintSize="502.4,378.4" sap2010:WorkflowViewState.IdRef="If_19">
                  <If.Then>
                    <Assign DisplayName="Assign Multiple ExcludedSender to Query" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_40">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["(from/emailAddress/address ne "]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Assign Multiple ExcludedSender to Query" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_41">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[io_queryFullStatement + " AND (from/emailAddress/address ne "]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[arrExcludedSenderIndex]" DisplayName="For Each ExcludedSender" sap:VirtualizedContainerService.HintSize="502,400" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[arrExcludedSenders]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="inSender" />
                      </ActivityAction.Argument>
                      <If Condition="[arrExcludedSenderIndex = 0]" DisplayName="If this is the first of multiple Excluded senders" sap:VirtualizedContainerService.HintSize="468,264" sap2010:WorkflowViewState.IdRef="If_20">
                        <If.Then>
                          <Assign DisplayName="Assign first Multiple IncludedSender to Query" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_42">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[io_queryFullStatement + "'"+ inSender.Trim + "'"]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Assign DisplayName="Assign second and beyond Multiple IncludedSender to Query" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[io_queryFullStatement + " AND from/emailAddress/address ne '" + inSender.Trim + "'"]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
                <Assign DisplayName="Assign Multiple ExcludedSender to Query" sap:VirtualizedContainerService.HintSize="502,82" sap2010:WorkflowViewState.IdRef="Assign_44">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[io_queryFullStatement + ")"]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </Switch.Default>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If x:Key="1" Condition="[arrExcludedSenders(0).Trim.Contains(&quot;@&quot;c)]" DisplayName="If '@' symbol is found, Assign single IncludedSender to Query" sap:VirtualizedContainerService.HintSize="502,446" sap2010:WorkflowViewState.IdRef="If_18">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <If Condition="[String.IsNullOrEmpty(io_queryFullStatement)]" sap:VirtualizedContainerService.HintSize="468,264" sap2010:WorkflowViewState.IdRef="If_16">
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_36">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["from/emailAddress/address ne '" + arrExcludedSenders(0).Trim + "'"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[io_queryFullStatement + " AND from/emailAddress/address ne '" + arrExcludedSenders(0).Trim + "'"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </If.Then>
              <If.Else>
                <If Condition="[String.IsNullOrEmpty(io_queryFullStatement)]" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_17">
                  <If.Then>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">["not contains(from/emailAddress/address, '@" +  arrExcludedSenders(0).Trim + "')"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[io_queryFullStatement]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[io_queryFullStatement + " AND not contains(from/emailAddress/address, '@" +  arrExcludedSenders(0).Trim + "')"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </If.Else>
            </If>
            <ui:LogMessage x:Key="0" DisplayName="LogMessage (No included Senders)" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="[&quot;No excluded senders in query&quot;]" />
          </Switch>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap2010:WorkflowViewState.IdRef="Sequence_21" />
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message (The final Statement)" sap:VirtualizedContainerService.HintSize="678,141" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[io_queryFullStatement]" />
  </Sequence>
</Activity>